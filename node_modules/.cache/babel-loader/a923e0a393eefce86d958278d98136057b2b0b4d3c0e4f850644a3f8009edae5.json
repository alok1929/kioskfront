{"ast":null,"code":"var _jsxFileName = \"/home/alokie/cuties/kioskfrontend/src/f.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useReactMediaRecorder } from 'react-media-recorder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyComponent = ({\n  onSendVoiceMessage\n}) => {\n  _s();\n  const {\n    status,\n    startRecording,\n    stopRecording,\n    mediaBlobUrl\n  } = useReactMediaRecorder({\n    audio: true\n  });\n  useEffect(() => {\n    if (mediaBlobUrl) {\n      onSendVoiceMessage(mediaBlobUrl);\n    }\n  }, [mediaBlobUrl, onSendVoiceMessage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRecording,\n      children: \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopRecording,\n      children: \"Stop Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), mediaBlobUrl && /*#__PURE__*/_jsxDEV(\"audio\", {\n      src: mediaBlobUrl,\n      controls: true,\n      autoPlay: true,\n      loop: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(MyComponent, \"OuKxYGm/n6FeUh7m4cvkoi0f+hc=\", false, function () {\n  return [useReactMediaRecorder];\n});\n_c = MyComponent;\nexport default MyComponent;\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","useEffect","useReactMediaRecorder","jsxDEV","_jsxDEV","MyComponent","onSendVoiceMessage","_s","status","startRecording","stopRecording","mediaBlobUrl","audio","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","controls","autoPlay","loop","_c","$RefreshReg$"],"sources":["/home/alokie/cuties/kioskfrontend/src/f.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useReactMediaRecorder } from 'react-media-recorder';\n\nconst MyComponent = ({ onSendVoiceMessage }) => {\n  const { status, startRecording, stopRecording, mediaBlobUrl } = useReactMediaRecorder({ audio: true });\n\n  useEffect(() => {\n    if (mediaBlobUrl) {\n      onSendVoiceMessage(mediaBlobUrl);\n    }\n  }, [mediaBlobUrl, onSendVoiceMessage]);\n\n  return (\n    <div>\n      <p>{status}</p>\n      <button onClick={startRecording}>Start Recording</button>\n      <button onClick={stopRecording}>Stop Recording</button>\n      {mediaBlobUrl && <audio src={mediaBlobUrl} controls autoPlay loop />}\n    </div>\n  );\n};\n\nexport default MyComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,qBAAqB,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAmB,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM;IAAEC,MAAM;IAAEC,cAAc;IAAEC,aAAa;IAAEC;EAAa,CAAC,GAAGT,qBAAqB,CAAC;IAAEU,KAAK,EAAE;EAAK,CAAC,CAAC;EAEtGX,SAAS,CAAC,MAAM;IACd,IAAIU,YAAY,EAAE;MAChBL,kBAAkB,CAACK,YAAY,CAAC;IAClC;EACF,CAAC,EAAE,CAACA,YAAY,EAAEL,kBAAkB,CAAC,CAAC;EAEtC,oBACEF,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAIL;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfb,OAAA;MAAQc,OAAO,EAAET,cAAe;MAAAI,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzDb,OAAA;MAAQc,OAAO,EAAER,aAAc;MAAAG,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACtDN,YAAY,iBAAIP,OAAA;MAAOe,GAAG,EAAER,YAAa;MAACS,QAAQ;MAACC,QAAQ;MAACC,IAAI;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEV,CAAC;AAACV,EAAA,CAjBIF,WAAW;EAAA,QACiDH,qBAAqB;AAAA;AAAAqB,EAAA,GADjFlB,WAAW;AAmBjB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
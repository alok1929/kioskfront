{"ast":null,"code":"var _jsxFileName = \"/home/alokie/cuties/kioskfrontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { MediaRecorder } from 'react-media-recorder';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [isRecording, setIsRecording] = useState(false);\n  const handleSend = async audioBlob => {\n    const formData = new FormData();\n    formData.append('file', audioBlob, 'audio.wav');\n    try {\n      const response = await axios.post('http://localhost:8000/speech-to-text/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      const text = response.data.text;\n      setMessages(prevMessages => [...prevMessages, {\n        text,\n        sender: 'user'\n      }, {\n        text: 'Hello! How can I help you?',\n        sender: 'bot'\n      }]);\n    } catch (error) {\n      console.error('Error processing audio:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex items-end justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-3xl\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col h-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 p-4 overflow-y-auto\",\n          children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `my-2 p-2 rounded-lg ${message.sender === 'user' ? 'bg-blue-500 text-white self-end' : 'bg-gray-200 text-black self-start'}`,\n            children: message.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 m-1 border-t flex rounded-2xl shadow-lg\",\n          children: /*#__PURE__*/_jsxDEV(MediaRecorder, {\n            audio: true,\n            render: ({\n              startRecording,\n              stopRecording,\n              mediaBlobUrl\n            }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: `p-2 rounded-lg ${isRecording ? 'bg-red-500' : 'bg-green-500'} text-white`,\n                onClick: () => {\n                  if (isRecording) {\n                    stopRecording();\n                    setIsRecording(false);\n                  } else {\n                    startRecording();\n                    setIsRecording(true);\n                  }\n                },\n                children: isRecording ? 'Stop Recording' : 'Start Recording'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this), mediaBlobUrl && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n                  src: mediaBlobUrl,\n                  controls: true,\n                  className: \"ml-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"bg-blue-500 text-white p-2 rounded-lg ml-2\",\n                  onClick: () => {\n                    fetch(mediaBlobUrl).then(res => res.blob()).then(blob => handleSend(blob));\n                  },\n                  children: \"Send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"QMuQmRb4A6HErFvaJRwLtEV07yM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MediaRecorder","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","messages","setMessages","isRecording","setIsRecording","handleSend","audioBlob","formData","FormData","append","response","post","headers","text","data","prevMessages","sender","error","console","className","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","audio","render","startRecording","stopRecording","mediaBlobUrl","onClick","src","controls","fetch","then","res","blob","_c","$RefreshReg$"],"sources":["/home/alokie/cuties/kioskfrontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { MediaRecorder } from 'react-media-recorder';\nimport axios from 'axios';\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const [isRecording, setIsRecording] = useState(false);\n\n  const handleSend = async (audioBlob) => {\n    const formData = new FormData();\n    formData.append('file', audioBlob, 'audio.wav');\n\n    try {\n      const response = await axios.post('http://localhost:8000/speech-to-text/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      const text = response.data.text;\n\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { text, sender: 'user' },\n        { text: 'Hello! How can I help you?', sender: 'bot' },\n      ]);\n    } catch (error) {\n      console.error('Error processing audio:', error);\n    }\n  };\n\n  return (\n    <div className=\"h-screen flex items-end justify-center\">\n      <div className=\"w-full max-w-3xl\">\n        <div className=\"flex flex-col h-screen\">\n          <div className=\"flex-1 p-4 overflow-y-auto\">\n            {messages.map((message, index) => (\n              <div\n                key={index}\n                className={`my-2 p-2 rounded-lg ${message.sender === 'user' ? 'bg-blue-500 text-white self-end' : 'bg-gray-200 text-black self-start'}`}\n              >\n                {message.text}\n              </div>\n            ))}\n          </div>\n          <div className=\"p-4 m-1 border-t flex rounded-2xl shadow-lg\">\n            <MediaRecorder\n              audio\n              render={({ startRecording, stopRecording, mediaBlobUrl }) => (\n                <>\n                  <button\n                    className={`p-2 rounded-lg ${isRecording ? 'bg-red-500' : 'bg-green-500'} text-white`}\n                    onClick={() => {\n                      if (isRecording) {\n                        stopRecording();\n                        setIsRecording(false);\n                      } else {\n                        startRecording();\n                        setIsRecording(true);\n                      }\n                    }}\n                  >\n                    {isRecording ? 'Stop Recording' : 'Start Recording'}\n                  </button>\n                  {mediaBlobUrl && (\n                    <>\n                      <audio src={mediaBlobUrl} controls className=\"ml-4\" />\n                      <button\n                        className=\"bg-blue-500 text-white p-2 rounded-lg ml-2\"\n                        onClick={() => {\n                          fetch(mediaBlobUrl)\n                            .then((res) => res.blob())\n                            .then((blob) => handleSend(blob));\n                        }}\n                      >\n                        Send\n                      </button>\n                    </>\n                  )}\n                </>\n              )}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}